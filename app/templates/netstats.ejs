<div class="col-lg-12 col-xl-12">

    <div class="page-header">
        <h1 class="page-title">
            Zone Server Netstats
            <div class="small text-muted">
                <span class="zone-name"></span> <span class="zone-port"></span>
            </div>
        </h1>
    </div>

    <!-- Counts -->
    <div class="row row-cards">
        <div class="col-sm-6 col-lg-3">
            <!-- Player count -->
            <div class="card p-3">
                <div class="d-flex align-items-center">
                        <span class="stamp stamp-md bg-red mr-3">
                          <i class="fe fe-users"></i>
                        </span>
                    <div>
                        <h4 class="m-0"><span class="player-count">0</span>
                            <small>Players</small>
                        </h4>
                        <small class="text-muted">Currently in zone</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-lg-3">
            <!-- NPC Count -->
            <div class="card p-3">
                <div class="d-flex align-items-center">
                        <span class="stamp stamp-md bg-yellow mr-3">
                          <i class="fe fe-gitlab"></i>
                        </span>
                    <div>
                        <h4 class="m-0"><span class="npc-count">0</span>
                            <small>NPCs</small>
                        </h4>
                        <small class="text-muted">Currently in zone</small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Packet Types Sent -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Packet Types Sent from Server</h3>
        </div>
        <div class="card-body">
            <div id="packet-sent-types" style="height: 16rem"></div>
        </div>
    </div>

    <!-- Packet Types Received -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Packet Types Received from Server</h3>
        </div>
        <div class="card-body">
            <div id="packet-receive-types" style="height: 16rem"></div>
        </div>
    </div>

    <!-- Netstats from all clients -->
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Client Netstats</h3>
            </div>
            <div class="table-responsive">
                <table class="table card-table table-vcenter text-nowrap" id="client-netstats">
                    <thead>
                    <tr>

                        <th>Client ID</th>
                        <th>Client Name</th>
                        <th>Average Ping</th>
                        <th>Last Ping</th>
                        <th>Min Ping</th>
                        <th>Max Ping</th>
                        <th>Packet Loss In %</th>
                        <th>Packet Loss Out %</th>
                        <th>Realtime Receive Packets</th>
                        <th>Realtime Sent Packets</th>
                        <th>Receive Bytes</th>
                        <th>Sent Bytes</th>
                        <th>Resent Packets</th>
                        <th>Resent Fragments</th>
                        <th>Resent Non Fragments</th>
                        <th>Seconds Since Reset</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td></td>
                        <td></td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
      netstat_zone_port = <%= port %>;

      var npc_list    = [];
      var client_list = [];

      require(['c3', 'jquery'], function (c3, $) {
        $('.zone-port').html("Port: " + netstat_zone_port);

        $(document).ready(function () {

          getClientNetstats();

          /**
           * Zone attributes
           * @type {string}
           */
          $.get('/api/zoneserver/' + netstat_zone_port + '/attributes', function (data) {
            $(".zone-name").html(data[0].long_name + " (" + data[0].short_name + ")");
          });

          /**
           * Client details
           * @type {string}
           */
          $.get('/api/zoneserver/' + netstat_zone_port + '/client/list/detail', function (data) {
            // console.log(data);
            $(".player-count").html(data.length);
            client_list = data;
          });

          /**
           * NPC details
           * @type {string}
           */
          $.get('/api/zoneserver/' + netstat_zone_port + '/npc/list/detail', function (data) {
            // console.log(data);
            $(".npc-count").html(data.length);
            npc_list = data;
          });

          /**
           * Sent types
           * @type {string}
           */
          var chart_packet_types_sent_endpoint = '/api/zoneserver/netstat/' + netstat_zone_port + '/chart/packet_types_sent';
          $.get(chart_packet_types_sent_endpoint, function (data) {
            chart_packet_types_sent = c3.generate(
              {
                bindto: '#packet-sent-types',
                transition: {
                  duration: 0
                },
                line: {
                  connectNull: true,
                },
                point: {
                  show: false
                },
                data: data,
                axis: {
                  x: {
                    type: 'timeseries',
                    tick: {
                      format: '%H:%M:%S',
                      fit: true,
                    }
                  },
                  y: {
                    show: true
                  }
                }
              });
          });

          /**
           * Receive types
           * @type {string}
           */
          var chart_packet_types_receive_endpoint = '/api/zoneserver/netstat/' + netstat_zone_port + '/chart/packet_types_receive';
          $.get(chart_packet_types_receive_endpoint, function (data) {
            chart_packet_types_receive = c3.generate(
              {
                bindto: '#packet-receive-types',
                transition: {
                  duration: 0
                },
                line: {
                  connectNull: true,
                },
                point: {
                  show: false
                },
                data: data,
                axis: {
                  x: {
                    type: 'timeseries',
                    tick: {
                      format: '%H:%M:%S',
                      fit: true,
                    }
                  },
                  y: {
                    show: true
                  }
                }
              });

          });

          setInterval(function () {
            refreshCharts();
            getClientNetstats();
          }, 1000);

          /**
           * Refresh charts
           */
          function refreshCharts() {
            $.get(chart_packet_types_sent_endpoint, function (data) {
              chart_packet_types_sent.load(data);
            });
            $.get(chart_packet_types_receive_endpoint, function (data) {
              chart_packet_types_receive.load(data);
            });
          }

          /**
           * Client netstats
           */
          function getClientNetstats() {
            $.get('/api/zoneserver/' + netstat_zone_port + '/netstats', function (data) {

              $('#client-netstats tbody').empty();

              for (var row in data) {

                var client_stats = [
                  data[row].client_id,
                  data[row].client_name,
                  commify(data[row].average_ping) + " ms",
                  commify(data[row].last_ping) + " ms",
                  commify(data[row].min_ping) + " ms",
                  commify(data[row].max_ping) + " ms",
                  parseFloat(data[row].packet_loss_in).toFixed(2),
                  parseFloat(data[row].packet_loss_out).toFixed(2),
                  commify(data[row].realtime_receive_packets),
                  commify(data[row].realtime_sent_packets),
                  data[row].receive_bytes,
                  data[row].sent_bytes,
                  commify(data[row].resent_packets),
                  commify(data[row].resent_fragments),
                  commify(data[row].resent_non_fragments),
                  parseFloat( data[row].seconds_since_reset).toFixed(2),
                ];

                var row_data = "";
                for (var stat in client_stats) {
                  row_data = row_data + "<td>" + client_stats[stat] + "</td>";
                }

                $("#client-netstats > tbody").append('<tr>' + row_data + '</tr>');
              }
            });
          }

          function commify(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          }

        });
      });
    </script>
</div>
